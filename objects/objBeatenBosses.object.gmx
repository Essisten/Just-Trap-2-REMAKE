<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blend = c_white;
sel = global.selectedBoss;
var d = 1000000;
for (var i = 0; i &lt; 5; i++)
{
    tiles[i] = tile_get_ids_at_depth(d);
    d /= 10;
}
event_user(0);
background_alpha[1] = 0.99;
if (global.tutorial[0])
    instance_create(160, 64, objTutorial1);
if (global.hubColor == -1)
    global.hubColor = irandom(255);
background_blend[0] = make_colour_hsv(global.hubColor, 220, 255);
alarm[0] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.hubColor++;
if (global.hubColor &gt; 255)
    global.hubColor = 0;
background_blend[0] = make_colour_hsv(global.hubColor, 220, 255);
alarm[0] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tmp = background_alpha[1];
var tmp2 = tmp;
if (global.selectedBoss &gt; 0 and tmp &lt; 1)
{
    tmp += 0.05;
    if (sel != global.selectedBoss)
    {
        sel = global.selectedBoss;
        event_user(0);
    }
}
else if (global.selectedBoss == 0 and tmp &gt; 0)
    tmp -= 0.05;
    
if (tmp != tmp2)
{
    background_alpha[1] = tmp;
    if (sel != 0)
        event_user(1);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Changing tiles transparency
var l = array_length_1d(tiles[sel]);
var temp = tiles[sel];
for (var i = 0; i &lt; l; i++)
{
    tile_set_alpha(temp[i], background_alpha[1]);
}
switch (global.selectedBoss)
{
    case 1:
        if (background_index[1] != bBoss1)
            background_index[1] = bBoss1;
        break;
    case 2:
        if (background_index[1] != bBoss2_BG)
            background_index[1] = bBoss2_BG;
        break;
    case 3:
        if (background_index[1] != bBoss3_BG2)
            background_index[1] = bBoss3_BG2;
        break;
    case 4:
        if (background_index[1] != bBoss4)
            background_index[1] = bBoss4;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hiding other tiles
for (var i = 1; i &lt; 5; i++)
{
    var l = array_length_1d(tiles[i]);
    var temp = tiles[i];
    for (var j = 0; j &lt; l; j++)
    {
        tile_set_alpha(temp[j], 0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrCheckBossClear(0);
if (global.spriteStyle == 0)
{
    draw_sprite_ext(sprJR_Idle, 0, 138, 440, 2, 2, 0, blend, image_alpha);
    draw_sprite_ext(sprJustist_Idle, 0, 242, 440, -2, 2, 0, blend, image_alpha);
}
else
{
    draw_sprite_ext(sprJR_Idle_Old, 0, 138, 440, 2, 2, 0, blend, image_alpha);
    draw_sprite_ext(sprJustist_Idle_Old, 0, 242, 440, -2, 2, 0, blend, image_alpha);
}
scrCheckBossClear(1);
draw_sprite_ext(sprJustularityIdleRed, 0, 554, 448, -2, 2, 0, blend, image_alpha);
draw_sprite_ext(sprJustularityIdleBlue, 0, 658, 448, 2, 2, 0, blend, image_alpha);
scrCheckBossClear(2);
draw_sprite_ext(sprJustrimsonA, 0, 112, 304, 0.5, 0.5, 0, blend, image_alpha);
draw_sprite_ext(sprJustrimsonB, 0, 168, 272, 0.5, 0.5, 0, blend, image_alpha);
draw_sprite_ext(sprJustrimsonB_Head, 0, 168, 272, 0.5, 0.5, 0, blend, image_alpha);
draw_sprite_ext(sprJustrimsonC, 0, 224, 272, 0.5, 0.5, 0, blend, image_alpha);
draw_sprite_ext(sprJustrimsonD, 0, 280, 304, 4, 4, 0, blend, image_alpha);
scrCheckBossClear(3);
if (global.spriteStyle == 0)
   draw_sprite_ext(sprJustination_Mini, 0, 608, 278, 1, 1, 0, blend, image_alpha);
else
    draw_sprite_ext(sprJustination_Mini, 1, 608, 278, 1, 1, 0, blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
