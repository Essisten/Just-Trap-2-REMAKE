<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[3] = 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving the healthbar
objBigJust_Healthbar.y += 2;
if (objBigJust_Healthbar.y - 4 &lt; objBigKid_BG.top_wall.y)
   alarm[3] = 1;
else
    alarm[0] = 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop the new spikes
with (objSpikeParent)
     vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stretch the box
if (x &gt; 0)
   x -= 4;
else if (y &gt; 0)
     y -= 4;
else
{
    alarm[2] = 64;
    for (var i = 1; i &lt; 21; i++)
    {
         if (i &gt; 4 and i &lt; 15)
            continue;
        with (instance_create(32 * (i + 1), -64, objSpikeDown))
        {
            vspeed = 2;
            sprite_index = sprBigKid_KamiliaSpike;
        }
        if (i &gt; 4)
           continue;
        with (instance_create(32 * i,
             view_yview[0] + view_hview[0] + 64, objSpikeUp))
        {
            vspeed = -2;
            sprite_index = sprBigKid_KamiliaSpike;
        }
    }
    exit;
}
with (objBigKid_BG)
{
    with (top_wall)
    {
        x = objBigJust_ViewMover.x + 32;
        xprevious = x;
        y = objBigJust_ViewMover.y;
        image_xscale = ceil((view_xview[0] + view_wview[0] - x) /
        sprite_get_width(sprite_index)) - 1;
    }
    with (left_wall)
    {
        x = objBigJust_ViewMover.x;
        y = objBigJust_ViewMover.y + 32;
        image_yscale = ceil((view_yview[0] + view_hview[0] - y) /
        sprite_get_height(sprite_index)) - 1;
    }
    with (right_wall)
    {
        y = objBigJust_ViewMover.y + 32;
        image_yscale = ceil((view_yview[0] + view_hview[0] - y) /
        sprite_get_height(sprite_index)) - 1;
    }
    with (bottom_wall)
    {
        x = objBigJust_ViewMover.x + 32;
        xprevious = x;
        image_xscale = ceil((view_xview[0] + view_wview[0] - x) /
        sprite_get_width(sprite_index));
    }
    with (left_top_edge)
    {
        x = objBigJust_ViewMover.x;
        y = objBigJust_ViewMover.y;
    }
    with (right_top_edge)
    {
        y = objBigJust_ViewMover.y;
    }
    with (left_bottom_edge)
    {
        x = objBigJust_ViewMover.x;
    }
    x = objBigJust_ViewMover.x;
    y = objBigJust_ViewMover.y;
}
with (objBigJust_Healthbar)
{
    x = objBigJust_ViewMover.x + 32;
    y = objBigJust_ViewMover.y + 4;
    width = view_xview[0] + view_wview[0] - x - 32;
}
with (objSpikeDown)
{
    y = objBigJust_ViewMover.y + 64;
}
alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move the view
alarm[0] = 1;
if (view_xview[0] &gt; 0)
   view_xview[0] -= 4;
else if (view_yview[0] &gt; 0)
     view_yview[0] -= 4;
else
{
    view_xview[0] = 0;
    view_yview[0] = 0;
    alarm[1] = 25;
    alarm[0] = -1;
    with (instance_create(view_xview[0] + view_wview[0],
                      view_yview[0] + view_hview[0] - 192, objCard))
    {
        y = view_yview[0];
        image_index = objBigKid_BG.phase + 4;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
