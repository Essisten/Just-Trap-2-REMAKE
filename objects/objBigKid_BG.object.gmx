<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>healthbar = -1;
width = 640;
height = 384;
color[0] = c_gray;
color[1] = c_maroon;
color[2] = -1;
color[3] = -1;
color[4] = c_black;
color[5] = -1;
color[6] = -1;
color[7] = -1;
BG[2] = sprBigKid_GayBG;
BG[3] = sprBigKid_GayBG;
BG[5] = sprBigKid_KamiliaBG;
BG[6] = sprBigKid_KamiliaBG;
phase = 0;
name[0] = "The Kid";
name[1] = "Crimson Kid";
name[2] = "Straight Kid";
name[3] = "Solgryn Kid";
name[4] = "Geezer Kid";
name[5] = "Kamilia Kid";
name[6] = "Kamilia";
name[7] = "The Kamilia";
image_speed = 1/8;
top_wall = instance_create(x + 32, y, objStretchableBlock);
bottom_wall = instance_create(x + 32, 576, objStretchableBlock);
left_wall = instance_create(x, y + 32, objStretchableBlock);
right_wall = instance_create(768, y + 32, objStretchableBlock);
alarm[0] = 200;
left_top_edge = instance_create(x, y, objBlockEdge);
left_bottom_edge = instance_create(x, 576, objBlockEdge);
right_top_edge = instance_create(768, y, objBlockEdge);
right_bottom_edge = instance_create(768, 576, objBlockEdge);
alarm[2] = 1;
healthbar = instance_create(x, y - 24, objBigJust_Healthbar);
with (top_wall)
{
    image_xscale = 19;
    sprite_index = sprBlock3;
}
with (bottom_wall)
{
    image_xscale = 19;
    sprite_index = sprBlock3;
}
with (left_wall)
{
    image_yscale = 11;
    sprite_index = sprBlock2;
}
with (right_wall)
{
    image_yscale = 11;
    sprite_index = sprBlock2;
}
with (objBlock)
     image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Post-create

if (global.difficulty &lt; 3)
{
   healthbar = instance_create(x, y, objPlayerHP);
    with (objPlayer)
         healthed = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop moving spikes
with (objSpikeUp)
{
    vspeed = 0;
}
with (objSpikeDown)
{
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start moving spikes
for (var i = 0; i &lt; 19; i++)
{
    if (i &gt; 9 and i &lt; 16)
       continue;
    instance_create(x + 32 * (i + 2), y + 32, objSpikeDown);
    instance_create(x + 32 * (i + 1), 576, objSpikeUp);
}
with (objSpikeUp)
{
    vspeed = -2;
    depth = 200;
}
with (objSpikeDown)
{
    vspeed = 2;
    depth = 200;
}
alarm[1] = 16;
//event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Show name
var label_name = instance_create(x, y - 64, objShowLabel);
label_name.text = name[phase];
with (label_name)
{
    alarm[1] = 150;
    color[0] = c_white;
    color[1] = c_gray;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (color[phase] == -1)
{
    sprite_index = BG[phase];
    draw_self();
}
else
{
    draw_set_color(color[phase]);
    draw_rectangle(x, y, x + width, y + height, false);
}
draw_set_font(fDefault30);
draw_set_halign(fa_left);
scrDrawTextOutline(x, y - 64, name[phase], c_white, c_gray);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="98">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.debugMode)
   exit;
with (objBigKid_Head)
     event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="97">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.debugMode or phase &lt; 2)
   exit;
phase -= 2;
with (objBigKid_Head)
     event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
