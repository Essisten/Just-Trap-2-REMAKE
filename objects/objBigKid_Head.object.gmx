<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBigJust_Head</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-84</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_speed = 0;
canParry = false;
bullet = noone;
bounce_counter = 0;
evenCounter = false;
frozen = false;
iframe = 0;
HP = 50;
maxHP = HP;
image_xscale = 16;
image_yscale = image_xscale;
with (instance_create(view_xview[0] + view_wview[0], view_yview[0] + view_hview[0] - 192, objCard))
{
    image_index = 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change phase later
event_user(0);
frozen = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///iframe
if (iframe &gt;= 30)
{
    iframe = 0;
    image_alpha = 1;
    with (objBigGeezer_Head)
    {
        event_perform(ev_alarm, 1);
        event_perform(ev_alarm, 2);
    }
    exit;
}
if (image_alpha == 0.4)
   image_alpha = 1;
else
    image_alpha = 0.4;
iframe++;
alarm[0] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayerKiller">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!other.reflected)
   exit;
if (alarm[0] &gt; -1)
{
    instance_destroy(other);
    exit;
}
bullet = other;
bullet.dmg /= 2;
event_perform(ev_collision, objBullet);
alarm[0] = 1;
with (objBigGeezer_Head)
{
    event_perform(ev_alarm, 3);
    alarm[1] = -1;
    alarm[2] = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (frozen)
   exit;
if (!instance_exists(bullet))
   bullet = instance_nearest(x, y, objBullet);
HP = clamp(HP - bullet.dmg, 0, 100);
instance_destroy(bullet);
event_user(1);
if (HP &lt;= 0 and !frozen)
{
    event_user(0);
}
scrPlaySound(sndBossHit);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sync HP
if (instance_exists(objBigJust_Healthbar))
{
    with (objBigJust_Healthbar)
    {
        HP = other.HP;
        if (oldHP &lt; HP)
           oldHP = HP;
        alarm[0] = 50;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack
if (!instance_exists(objPlayer))
   exit;
v_w = view_xview[0] + view_wview[0];
v_h = view_yview[0] + view_hview[0];
tmp = (maxHP - HP) div 10;
fruit_spd = (global.difficulty + 2) * 1.5;
tmpHP = (maxHP - HP) + (global.difficulty - 1) * 10;
snd = -1;
bounce_counter = instance_number(objBigKid_BounceFruit);
if (bounce_counter &lt; ceil((objBigKid_BG.phase + 1) * ((maxHP - HP) div 20)) / (4 - global.difficulty))
{
    with (instance_create(x, y, objBigKid_BounceFruit))
    {
        direction = random(360);
        speed = floor(other.fruit_spd / 2);
    }
}
switch (objBigKid_BG.phase)
{
    case 0:
         scrLovetrap_Attack();
         break;
    case 1:
         scrCrimson_Attack();
         break;
    case 2:
         scrGay_Attack();
         break;
    case 3:
         scrSolgryn_Attack();
         break;
    case 4:
         scrGeezer_Attack();
         break;
}
with (objCherry)
     depth = -110;
if (snd != -1)
{
    audio_stop_sound(snd);
    scrPlaySound(snd);
}
event_user(2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phase changed
if (!instance_exists(objPlayer) or frozen)
   exit;
HP = maxHP;
objBigKid_BG.phase++;
image_index = objBigKid_BG.phase;
scrCreateFade(c_white, 0.05, false);
if (global.difficulty &lt; 3)
   scrDamagePlayer(-1, false);
with (instance_create(view_xview[0] + view_wview[0], view_yview[0] + view_hview[0] - 192, objCard))
{
    image_index = objBigKid_BG.phase + 4;
    if (objBigKid_BG.phase == 1)
       image_index = 3;
    else if (objBigKid_BG.phase == 2)
         y = view_yview[0];
}
event_user(2);
with (objBigKid_Bullet)
     event_user(0);
with (objBigKid_Body)
   event_user(0);
switch (objBigKid_BG.phase)
{
    case 1:     //Crimson
         with (objBlock)
         {
              sprite_index = sprBoss3_Block;
              image_speed = 0;
         }
         with (objSpikeParent)
              image_blend = c_red;
         with (objBigBow)
         {
              image_index = 1;
              depth = -83;
         }
         break;
    case 2:    //Don't Gay
         with (objBigBow)
         {
              image_index = 2;
              depth = -87;
              x += 96;
              y -= 144;
         }
         with (objSpikeParent)
         {
            image_blend = c_white;
            sprite_index = sprBigKid_GaySpike;
         }
         with (objBlock)
             sprite_index = sprBigKid_Brick1;
         with (objBigKid_BG)
         {
            bottom_wall.image_index = 1;
            top_wall.image_index = 1;
            left_top_edge.image_index = 1;
            right_top_edge.image_index = 1;
         }
         instance_create(objPlayer.x, view_yview[0], objDeadShiratama);
         break;
    case 3:    //Solgryn
         with (objBigBow)
         {
              image_index = 3;
              image_angle = 0;
              x -= 96;
              y += 144;
         }
         with (objSpikeParent)
            sprite_index = sprBigKid_SolgrynSpike;
         with (objBlock)
              sprite_index = sprBigKid_Brick3;
         instance_destroy(objBigKid_GayShooter);
         break;
    case 4:    //Geezer
         with (objBigBow)
              image_index = 0;
         with (objSpikeParent)
            sprite_index = sprBigKid_GaySpike;
         with (objBlock)
              visible = false;;
         instance_create(x, y, objBigGeezer_Head);
         frozen = true;
         break;
    case 5:    //Kamilia 1
         with (objSpikeParent)
            sprite_index = sprBigKid_KamiliaSpike;
        with (objBlock)
        {
             sprite_index = sprBigKamilia_Block;
             visible = true;
        }
        instance_destroy(objBigGeezer_Head);
        instance_destroy(objGeezer_Text);
        with (objBigGeezer_BG)
             instance_destroy();
         depth = -19;
         with (objBigKid_BG)
         {
            with (top_wall)
                 image_index = 1;
            with (left_wall)
                 image_index = 2;
            with (right_wall)
                 image_index = 2;
            with (bottom_wall)
                 sprite_index = sprBigKamilia_Platform;
         }
         break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
