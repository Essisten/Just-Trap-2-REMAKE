<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100030</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 60;
alarm[1] = 1;
boss = instance_find(objJustularity, 0);
prevPlayerGrav = 3;
redX = 66;
redY = 130;
blueX = 78;
blueY = 470;
offset = 2;
blueOffset = 12;
width = 12;
sub = 0;
phase = 1;
music = -1;
play = false;
skip = false;
HP[0] = 0;  //Red
HP[1] = 0;  //Blue
HP[2] = boss.maxHP[0];
HP[3] = boss.maxHP[1];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Freeze player
with (objPlayer)
    frozen = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start animation

if (HP[0] &lt; boss.RedHP)
{
    alarm[0] = 7;
    HP[0] += 5;
    HP[1] = HP[0];
    scrPlaySound(sndBoss2_Charge);
}
else
{
    HP[0] = boss.RedHP;
    HP[1] = boss.BlueHP;
    play = true;
    if (!skip)
        scrPlayMusic(musStage2A, false);
    with (boss)
    {
        god = false;
        image_speed = 0.2;
        if (!other.skip)
            event_user(1);
    }
    with (objJustularity)
    {
        alarm[0] = -1;
        prevAct = 1;
    }
    with (objPlayer)
        frozen = false;
    with (objShowLabel)
        alarm[1] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (play)
{
    if (!audio_is_playing(global.currentMusic) and instance_exists(objPlayer))
    {
        var name = musStage2B;
        if (phase == 2)
            name = musStage2D;
        scrPlayMusic(name, true);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (scrButtonCheckPressed(global.skipButton) and alarm[0] != -1 and !skip)
{
    if (global.skip[0])
    {
        with (objJustularity)
        {
            RedHP = 0;
            BlueHP = 0;
            event_user(4);
        }
        with (instance_create(400, 304, objViridian))
        {
            alarm[0] = 2
            muted = true;;
        }
        with (objBoss2Door)
        {
            image_yscale = 1;
            alarm[1] = -1;
            alarm[2] = 1;
        }
        skip = true;
        phase = 2;
    }
    HP[0] = boss.RedHP;
    HP[1] = boss.BlueHP;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update HP

HP[0] = boss.RedHP;
HP[1] = boss.BlueHP;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);
if (HP[2] &gt; 0)
    draw_rectangle(redX - offset, redY - offset, redX + width + offset, redY + HP[2] * 1.28 + offset, false);
if (HP[3] &gt; 0)
    draw_rectangle(blueX - offset - blueOffset, blueY - offset, blueX + width + offset - blueOffset, blueY + HP[3] * -1.28 - offset, false);
draw_set_colour(c_white);

if (phase == 2)
    exit;
if (HP[0] &gt; 0)
    draw_sprite_ext(sprJustularityHP, round(sub), redX, redY + 3, 1, HP[0] * 1.24, 0, c_white, 1);
if (HP[1] &gt; 0)
    draw_sprite_ext(sprJustularityHP2, round(sub), blueX - blueOffset, blueY - 3, 1, HP[1] * -1.24, 0, c_white, 1);
sub += 0.2;
if (round(sub) &gt; 6)
    sub = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
