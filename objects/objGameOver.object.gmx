<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGameOver</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>objGameOver</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 6;
image_alpha = 0;
x = view_xview[0] + view_wview[0] / 2;
y = view_yview[0] + view_hview[0] / 2;
percent = 0;
old = 0;
stage = 1;
image_speed = 0;
image_index = global.GameOverType;
with (objMusicLooper)
     alarm[0] = -1;
//Happil 2
d = 0;
h2 = 8;
a = true;
b = false;
c = 0;
alarm[1] = 90;
global.frozen = false;
hide_progress = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Personal Best
if (!global.showPB or global.GameOverType == 4)
    exit;
switch (room)
{
    case rBoss1:
        old = global.pb[0];
        if (instance_exists(objJR))
            percent += abs(objJR.HP - 100);
        if (instance_exists(objJustist))
            percent += abs(objJustist.HP - 100);
        if (!instance_exists(objJustist) or !instance_exists(objJR))
            percent = 99.99;
        else
            percent = percent / 200 * 99;
        if (instance_exists(objBG))
        {
            if (objBG.final)
            {
                var tmp = 15 * (global.difficulty + 1);
                percent = 99 + abs(objBG.timer - tmp) / tmp;
            }
        }
        else
            percent = 99.99;
        if (old &lt; percent)
            global.pb[0] = percent;
        break;
    case rBoss2:
         stage = 2;
        if (instance_exists(objViridian))
        {
            old = global.pb[1];
            percent = 99.99;
            if (global.pb[1] &lt; percent)
                global.pb[1] = percent;
            break;
        }
        if (instance_exists(objJustularity))
        {
            if (objJustularity.phase == 1)
            {
                old = global.pb[1];
                percent = abs(objJustularity.BlueHP + objJustularity.RedHP - 200) / 2;
                if (percent == 100)
                   percent = 99.99;
                if (global.pb[1] &lt; percent)
                    global.pb[1] = percent;
            }
            else
            {
                old = global.pb[7];
                var bar1 = instance_find(objJustularity, 0);
                var bar2 = instance_find(objJustularity, 1);
                if (!bar1.isRed)
                {
                    var tmp = bar1;
                    bar1 = bar2;
                    bar2 = tmp;
                }
                var hp1 = 0;
                if (instance_exists(bar1))
                    hp1 = bar1.maxHP[0];
                var hp2 = 0;
                if (instance_exists(bar2))
                    hp2 = bar2.maxHP[1];
                percent = abs(hp1 + hp2 - 200) / 2;
                if (percent == 100)
                   percent = 99.99;
                if (global.pb[7] &lt; percent)
                    global.pb[7] = percent;
                if (global.pb[1] &lt; 100)
                {
                    percent += 100 - global.pb[1];
                    global.pb[1] = 100;
                }
            }
        }
        else
        {
            old = global.pb[7];
            percent = 99.99;
            if (global.pb[7] &lt; percent)
                global.pb[7] = percent;
        }
        break;
    case rBoss4:
         stage = 4;
        old = global.pb[3];
        if (instance_exists(objJustination))
        {
            if (objJustination.alarm[0] != -1)
                percent = 99 + abs(objJustination.HP - 100) / 100;
            else if (instance_exists(objJustinationDark) and instance_exists(objJustinationIce) and
            instance_exists(objJustinationLight) and instance_exists(objJustinationFire))
                percent = abs(objJustinationDark.HP + objJustinationIce.HP + objJustinationLight.HP + objJustinationFire.HP - 400) / 400 * 99;
        }
        else
            percent = 99.99;
        if (old &lt; percent)
            global.pb[3] = percent;
        break;
    case rBoss3:
         stage = 3;
        old = global.pb[2];
        if (!objJustrimsonController.dead)
        {
            percent = (400 - (objJustrimsonA.HP + objJustrimsonB.HP + objJustrimsonC.HP + objJustrimsonD.HP)) / 4;
        }
        else
            percent = 99.99;
        if (old &lt; percent)
            global.pb[2] = percent;
        break;
    case rFinalBoss:
        stage = 11;
        old = global.pb[10];
        with (objBigKid_Head)
            other.percent = ((maxHP * objBigKid_BG.phase + (maxHP - HP)) / (maxHP * 6)) * 100;
        if (old &lt; percent)
            global.pb[10] = percent;
        hide_progress = true;
        break;
}
if (percent &gt; old)
   scrShowMoney(view_xview[0] + view_wview[0] - 128, view_yview[0] + view_hview[0] - 32, stage, false, ceil((percent - old) * stage * (1 + global.difficulty)));
if (percent &gt; 100 and stage == 2)
    percent -= 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>b = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha += 0.04;
if (image_alpha &lt; 1)
    alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 4)
{
    if (a and d &lt; view_yview[0] + view_hview[0] / 2)
        d += 8;
    if (b and c &lt; 20)
        c += 1;
    if (d &gt;= view_yview[0] + view_hview[0] / 2 and h2 &lt; view_xview[0] + view_wview[0] / 2)
        h2 += 8;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var h = view_hview[0];
var w = view_wview[0];
if (image_index == 4)
{
    if (a)
    {
        draw_set_alpha(0.5);
        draw_rectangle_color(x - h2, y - d, x, y + d, c_red, c_red, c_red, c_red, 0);
        draw_set_alpha(1);
        
        draw_set_blend_mode_ext(bm_inv_dest_color, bm_inv_dest_color);
        draw_rectangle_color(x + 1, y - d, x + h2, y + d, c_white, c_white, c_white, c_white, 0);
        draw_set_color(c_black);
        draw_set_blend_mode(bm_normal);
    }
    if (b)
    {
        draw_set_blend_mode(bm_subtract);
        draw_rectangle_color(x - 600 + 10 * c, y - view_hview[0] / 2, x - view_wview[0] / 2 + 10 * c, y + view_yview[0] + view_hview[0] / 2, c_white, c_black, c_black, c_white, 0);
        draw_rectangle_color(x + view_wview[0] / 2 - 10 * c, y - view_hview[0] / 2, x+600-10*c, y + view_hview[0] / 2, c_black, c_white, c_white, c_black, 0);
        draw_set_blend_mode(bm_normal);
    }
}
else
{
    draw_set_blend_mode(bm_add);
    draw_rectangle_colour(view_xview[0], h / 2, view_xview[0] + w, view_yview[0] + (h - h * (image_alpha + 0.2)) / 2, c_black, c_black, c_red, c_red, false);
    draw_rectangle_colour(view_xview[0], h / 2, view_xview[0] + w, view_yview[0] + (h + h * (image_alpha + 0.2)) / 2, c_red, c_red, c_black, c_black, false);
    draw_set_blend_mode(bm_normal);
}
if (image_index &lt; 3)
{
    draw_set_font(fDefault24);
    draw_set_halign(fa_center);
    draw_set_alpha(image_alpha);
    draw_set_valign(fa_top);
    scrDrawTextOutline(x, y + 56, "Press '" + scrGetKeybind(global.restartButton[0]) + "' to restart", c_maroon, c_black);
    draw_set_alpha(1);
}
draw_self();
if (old &lt; percent and !hide_progress)
{
    draw_set_font(fDefault24);
    draw_set_halign(fa_center);
    draw_set_alpha(image_alpha);
    scrDrawTextOutline(x, y + 110, "Personal Best", c_maroon, c_black);
    scrDrawTextOutline(x, y + 150, string(percent) + "%", c_maroon, c_black);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
