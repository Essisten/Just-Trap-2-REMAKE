<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJR_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 4;
image_yscale = image_xscale;
image_speed = 0.1;
flying = false;
hidden = false;
godmode = false;
showing = false;
canWalk = true;
destinationX = 250;
spd = 3;
dick = 0;
oldY = y;
shootCounter = 0;
extraBulletsCounter = 0;
counter = 0;
HP = 100;
rad = 64;
energy = 0;
flyHight = random_range(200, 250);
nextFlyHight = flyHight;
nextFlying = flying;
warnDelay = 80 - global.difficulty * 20;
instance_create(x, y, objBoss1Bow);
with (instance_create(x, y, objBossName))
{
    name = "JR";
    xflip = true;
    yflip = true;
    owner = objJR;
}
event_user(0);
event_user(1);
event_user(4);
alarm[8] = irandom_range(1500, 2000);
hole = instance_nearest(x, y, objWallHole);
emitterRevive = part_emitter_create(global.saveParticleSystem);
particleRevive = part_type_create();
part_type_shape(particleRevive,pt_shape_cloud);
part_type_color2(particleRevive,16777088,16776960);
part_type_alpha3(particleRevive,0.7485,0.8681,0);
part_type_life(particleRevive,50,200);
part_type_size(particleRevive,1,2,0,0);
part_type_speed(particleRevive,1,3,0,0);
part_type_direction(particleRevive,0,360,0,0);
part_type_orientation(particleRevive,0,360,0,0,0);
part_type_gravity(particleRevive,0,270);
part_type_blend(particleRevive,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Real flying
flying = nextFlying;
flyHight = nextFlyHight;
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Real walking
canWalk = true;
event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Real attacking
if (!instance_exists(objPlayer) or alarm[4] = -1)
    return -1;
if (hidden)
{
    event_user(4);
    return -1;
}
if (HP &gt; 75)
{
    event_user(11);
}
else if (HP &gt; 50)
{
    event_user(12);
}
else if (HP &gt; 0)
{
    alarm[5] = 1;
}
else if (HP &lt;= 0)
{
    if (choose(true, false))
        alarm[5] = 1;
    else
        event_user(12);
}
energy++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Healing

if (hidden or energy &lt;= 5 or HP &lt;= 0 or HP &gt;= 100)
{
    alarm[8] = 50;
    return -1;
}
var tmp = irandom_range(5, min(energy, 20));
var targ = objJR;
if (objJustist.HP &lt; HP and objJustist.HP &gt; 0)
    targ = objJustist;
if (targ.HP &gt; 80)
    tmp = min(energy, 100 - targ.HP);
with (instance_create(x, y, objHealBullet))
{
    num = tmp;
    target = targ;
    speed = targ.spd;
}
energy -= tmp;
alarm[8] = irandom_range(1500, 2000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Revive

if (hidden)
{
    alarm[7] = 50;
    exit;
}
if (HP &gt;= 100 or energy == 0)
{
    alarm[7] = -1;
    extraBulletsCounter--;
    exit;
}
HP++;
energy--;
audio_play_sound(sndHeal, 2, false);
alarm[7] = 5;
if (!global.particles)
    exit;
part_emitter_region(global.saveParticleSystem, emitterRevive,x - 8, x + 8, y - 8, y + 8, ps_shape_ellipse,ps_distr_gaussian);
part_emitter_burst(global.saveParticleSystem, emitterRevive, particleRevive, 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>counter++;
if (showing)
{
    if (image_alpha &lt; 1)
        image_alpha = counter / 10;
    if (image_yscale &lt; 4)
        image_yscale = counter / 10 * 4;
    if (image_xscale &lt; 0)
        image_xscale = image_yscale * -1;
    else
        image_xscale = image_yscale;
    y = min(hole.y, 464);
    destinationX = hole.x;
    if (counter &gt;= 10)
    {
        counter = 0;
        alarm[6] = -1;
    }
    else
        alarm[6] = 2;
}
else
{
    if (image_alpha &gt; 0)
        image_alpha = 1 - counter / 10;
    if (image_yscale &gt; 0)
        image_yscale = (1 - counter / 10) * 4;
    if (image_xscale &lt; 0)
        image_xscale = image_yscale * -1;
    else
        image_xscale = image_yscale;
    y = hole.y
    hightY = hole.y;
    destinationX = hole.x;
    if (counter &gt;= 10)
    {
        oldY = -50;
        y = -50;
        flyHight = -50;
        counter = 0;
        alarm[6] = -1;
        hole = objBG.holes[irandom_range(0, 4)];
    }
    else
        alarm[6] = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack 2. It requires real time shooting

if (HP &gt; 50 or !instance_exists(objPlayer))
    alarm[5] = -1;
else if (HP &gt; 25)
{
    if (shootCounter &gt; 8 + global.difficulty * 2)
    {
        event_user(4);
        shootCounter = 0;
        alarm[5] = -1;
        energy++;
    }
    else
        alarm[5] = random_range(2, 3);
    var bullet = instance_create(x, y, objBulletJR);
    with (bullet)
    {
        alarm[0] = 1;
        speed += random_range(-1, 1);
    }
    audio_play_sound(sndShoot, 2, false);
    shootCounter++;
}
else
{
    if (shootCounter &gt; 12 + global.difficulty * 3)
    {
        event_user(4);
        shootCounter = 0;
        alarm[5] = -1;
        energy++;
    }
    else
        alarm[5] = random_range(1, 2);
    var bullet = instance_create(x, y, objBulletJR);
    with (bullet)
    {
        alarm[0] = 1;
        speed += random_range(-1, 1);
    }
    audio_play_sound(sndShoot, 2, false);
    shootCounter++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking
if (!instance_exists(objPlayer))
    return -1;
event_user(4);
if (hidden)
    return -1;
if (global.difficulty &lt; 3)
    scrPlaySound(sndBoss1_Reload, 1.2);
alarm[9] = warnDelay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turning off I-framing

godmode = false;
alarm[2] = -1;
image_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///I-framing

if (image_alpha == 1)
    image_alpha = 0.2;
else
    image_alpha = 1;
alarm[2] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Walking
if (x != destinationX or hidden)
{
    event_user(1);
    return -1;
}
destinationX = irandom_range(0, 800);
if (destinationX &lt; 48)
    destinationX = 48;
else if (destinationX &gt; 752)
    destinationX = 752;
if (global.difficulty &lt; 3)
{
    if (nextFlying)
        instance_create(destinationX, nextFlyHight, objWarningJR);
    else
        instance_create(destinationX, 464, objWarningJR);
}
alarm[10] = warnDelay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fly or walk
if ((flying and oldY != flyHight) or (!flying and oldY &lt; 464) or hidden)
{
    event_user(0);
    exit;
}
nextFlying = choose(true, false);
if (nextFlying)
{
    nextFlyHight = irandom_range(150, 300);
    if (flying != nextFlying and global.difficulty &lt; 3)
        instance_create(destinationX, nextFlyHight, objWarningJR);
}
else
{
    if (flying != nextFlying and global.difficulty &lt; 3)
        instance_create(destinationX, 464, objWarningJR);
}
alarm[11] = warnDelay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (canWalk)
{
    if (destinationX &lt; x)
        image_xscale = abs(image_xscale) * -1;
    else if (destinationX &gt; x)
        image_xscale = abs(image_xscale);
}
else if (instance_exists(objPlayer))
{
    if (objPlayer.x &lt; x)
        image_xscale = abs(image_xscale) * -1;
    else if (objPlayer.x &gt; x)
        image_xscale = abs(image_xscale);
}

if (flying)
{
    if (flyHight &lt; oldY)
    {
        y = max(y - spd - 1, flyHight);
        oldY = y;
        sprite_index = sprJR_Jump;
    }
    else if (flyHight &gt; oldY)
    {
        y = min(y + spd + 1, flyHight);
        oldY = y;
        sprite_index = sprJR_Fall;
    }
    else
    {
        y = oldY + 8 * sin(degtorad(dick));
        dick += 8;
        sprite_index = sprJR_Fall;
    }
}
else
{
    if (y &lt; 464)
    {
        y = min(y + spd + 1, 464);
        oldY = y;
        sprite_index = sprJR_Fall;
    }
    else
    {
        dick = 0;
        if (x == destinationX or !canWalk)
            sprite_index = sprJR_Idle;
        else
            sprite_index = sprJR_Run;
    }
}
if (x == destinationX)
    canWalk = false;
else if (canWalk)
{
    if (x &lt; destinationX)
        x = min(x + spd, destinationX);
    else if (x &gt; destinationX)
        x = max(x - spd, destinationX);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hidden)
    return -1;
with (other)
    instance_destroy();
if (HP &lt;= 0 and objJustist.HP &gt; 0)
{
    energy++;
    if (alarm[7] &gt; 10)
        alarm[7] -= 10;
}
if (godmode or HP &lt;= 0)
    return -1;
scrPlaySound(sndBossHit);
godmode = true;
alarm[2] = 1;
alarm[3] = 40;
HP -= 4 - global.difficulty;
if (HP &lt;= 0)
    scrPlaySound(sndDeath);
if ((extraBulletsCounter == 0 and HP &gt; 50 and HP &lt;= 75) or
(extraBulletsCounter &lt;= (1 + global.difficulty * 2) and HP &gt; 25 and HP &lt;= 50) or
(extraBulletsCounter &lt;= (1 + global.difficulty * 2) * 2 and HP &gt; 0 and HP &lt;= 25) or 
(extraBulletsCounter &lt;= (1 + global.difficulty * 2) * 3 and HP &lt;= 0))
{
    event_user(13);
    scrPlaySound(sndBoss1);
    spd += 1 + global.difficulty;
    image_speed += 0.04;
    energy +=3;
    if (HP &lt;= 0)
    {
        with (objBG)
        {
            alarm[1] = 5;
            maxPitch = 232/256;
        }
        alarm[7] = random_range(2000, 3000);
        if (objJustist.HP &lt;= 0)
        {
            with (objBG)
            {
                event_user(3);
                maxPitch = 208/256;
                alarm[1] = 5;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hidden or (HP &lt;= 0 and global.difficulty &lt; 3))
    exit;
scrKillPlayer();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawning extra bullets
for (var i = 0; i &lt; 1 + global.difficulty * 2; i++)
{
    var bullet = instance_create(x, y, objBulletJR);
    with (bullet)
    {
        direction = random(360);
        wrap = true;
        speed /= 2;
    }
    extraBulletsCounter++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack 2
for (var i = 0; i &lt; 18; i++)
{
    var bullet = instance_create(x, y, objBulletJR);
    with (bullet)
    {
        direction = 20 * i;
        alarm[0] = 12;
    }
}
scrPlaySound(sndShoot);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack 1
for (var i = 0; i &lt; 12; i++)
{
    var bullet = instance_create(x, y, objBulletJR);
    with (bullet)
    {
        direction = 30 * i;
        alarm[0] = 12;
    }
}
scrPlaySound(sndShoot);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resetting alarm[4]
if (objBG.phase == 2)
    alarm[4] = random_range(100, 200);
else
    alarm[4] = random_range(150, 300);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resetting alarm[1]
alarm[1] = abs(random_range(250, 400) - spd * 8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resetting alarm[0]
alarm[0] = random_range(400 - 200 * flying, 700 - 100 * flying) - 10 * global.difficulty;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (HP &lt;= 0)
{
    draw_set_blend_mode(bm_add);
    draw_set_alpha((0.7 - HP / 100) * image_alpha);
    draw_ellipse_colour(x - rad * 1.5, y - rad * 1.5, x + rad * 1.5, y + rad * 1.5, c_teal, c_black, false);
    draw_set_alpha(1);
    draw_set_blend_mode(bm_normal);
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, 0, c_black, image_alpha);
}
else
    draw_self();
if (HP &gt; 0 and !hidden)
{
    draw_set_alpha(1);
    draw_healthbar(x - rad, y - rad, x + rad, y - 68, HP, c_black, c_aqua, c_aqua, 0, true, true);
    draw_set_blend_mode(bm_add);
    draw_set_alpha((0.7 - HP / 100) * image_alpha);
    draw_ellipse_colour(x - rad, y - rad, x + rad, y + rad, c_teal, c_black, false);
    draw_set_alpha(1);
    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
