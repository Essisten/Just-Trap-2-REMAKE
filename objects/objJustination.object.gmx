<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJustination</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>objJustinationParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
colorHP = c_blue;
pitch = 1;
surprise = true;
active_parts = ds_list_create();
parts = ds_list_create();
spikes[0] = instance_create(random(128), 544, objBoss4_Spike);
spikes[1] = instance_create(random_range(652, 800), 544, objBoss4_Spike);
spikes[0].hspeed = choose(-2, 2) * (global.difficulty + 1);
spikes[1].hspeed = choose(-1, 1) * (global.difficulty + 1);
block_count = instance_number(objBoss4_Ground);
for (var i = 0; i &lt; block_count; i++)
{
    blocks[i] = instance_find(objBoss4_Ground, i);
}
normal[0] = sprJustination;
normal[1] = sprJustination_Old;
unlucky = 0;
crazy[0] = sprJustinationCrazy;
crazy[1] = sprJustinationCrazy_Old;
xx = x;
part_alpha = 0.5;
fantom = part_type_create();
part_type_alpha2(fantom, 0, 0);
part_type_sprite(fantom, normal[global.spriteStyle], false, false, false);
part_type_life(fantom, 4, 12);
part_type_speed(fantom, 0.1, 2, 0, 0);
part_type_direction(fantom, 0, 360, 0, 0);
emitter = part_emitter_create(global.portalParticleSystem);
siz = 2;
part_emitter_region(global.portalParticleSystem, emitter, x - siz, x + siz, y - siz, y + siz, pt_shape_circle, ps_distr_gaussian);
event_user(0);
alarm[3] = 60;
sprite_index = normal[global.spriteStyle];
with (instance_create(x, y, objBossName))
{
    name = "Justination";
    owner = objJustination;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Changing BG
var temp = 31 + random(64);
background_colour = make_colour_rgb(temp, temp, temp);
alarm[4] = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Changing active parts
scrPlaySound(sndBlockChange);
if (active)
    exit;
var length = ds_list_size(active_parts);
for (var i = 0; i &lt; length; i++)
{
    with (ds_list_find_value(active_parts, i))
    {
        active = false;
    }
}
ds_list_clear(active_parts);
var tmp = 2;
if (!instance_exists(objPlayer))
   tmp = 4;
for (var i = 0; i &lt; tmp; i++)
{
    var r = irandom(ds_list_size(parts) - 1);
    var part = ds_list_find_value(parts, r);
    if (part.HP &gt; 0)
       unlucky = 0;
    if ((i &gt; 0 and part == objJustinationLight and ds_list_size(parts) &gt; 1 and !instance_exists(objPlayer))
       or (unlucky &gt; 3 and part.HP &lt;= 0))
    {
        i --;
        continue;
    }
    objBoss4_Effects.side[i] = part;
    ds_list_add(active_parts, part);
    with (part)
    {
        active = true;
        event_user(15);
    }
    ds_list_delete(parts, r);
}
var part1 = ds_list_find_value(active_parts, 0),
    part2 = ds_list_find_value(active_parts, 1);
if (part1.HP &lt;= 0 and part2.HP &lt;= 0)
   unlucky++;
else
    unlucky = 0;
for (var i = 0; i &lt; block_count; i++)
{
    with (blocks[i])
        event_user(0);
}
if (!instance_exists(objPlayer))
   exit;;
length = min(ds_list_size(active_parts), 2);
for (var i = 0; i &lt; length; i++)
{
   spikes[i].owner = ds_list_find_value(active_parts, i);
   with (spikes[i])
        event_user(0);
}
event_user(0);
alarm[3] = 600;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Changing pitch
var p = min(audio_sound_get_pitch(global.currentMusic), 1);
if (pitch &gt;= p)
{
    alarm[2] = -1;
    exit;
}
audio_sound_pitch(global.currentMusic, p - 1/256);
alarm[2] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking

if (HP &gt; 50)
{
    repeat (global.difficulty + 1)
    {
        with (instance_create(x, y, objCherry))
        {
            sprite_index = choose(sprCherry, sprCherryWhite, sprCherryCyan, sprCherryGray);
            direction = random_range(200, 340);
            speed = random_range(2, 3 + global.difficulty * 2);
            change_dir = random_range(0.1, -0.1) * (global.difficulty + 1);
            image_xscale = 0.5;
            image_yscale = 0.5;
            dmg /= 5;
        }
    }
    alarm[0] = 8 - global.difficulty * 2;
}
else
{
    repeat (global.difficulty + 1)
    {
        with (instance_create(0, 0, objCherry))
        {
            sprite_index = choose(sprCherry, sprCherryWhite, sprCherryCyan, sprCherryGray);
            direction = random_range(270, 320);
            speed = random_range(1, 2 + global.difficulty);
            change_dir = random_range(0.1, -0.1) * (global.difficulty + 1);
            image_xscale = 0.5;
            image_yscale = 0.5;
        }
        with (instance_create(800, 0, objCherry))
        {
            sprite_index = choose(sprCherry, sprCherryWhite, sprCherryCyan, sprCherryGray);
            direction = random_range(270, 220);
            speed = random_range(1, 2 + global.difficulty);
            change_dir = random_range(0.1, -0.1) * (global.difficulty + 1);
            image_xscale = 0.5;
            image_yscale = 0.5;
        }
    }
    if (global.difficulty == 3)
       alarm[0] = 3;
    else
        alarm[0] = 18 - global.difficulty * 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBoss4_BigBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!active or !instance_exists(objPlayer))
   exit;
event_inherited();
if (HP &lt;= 0)
{
    with (objBoss4_Spike)
    {
        kill = false;
    }
    global.swapControls = false;
    scrSwapControls();
    global.frozen = true;
    alarm[4] = -1;
    background_alpha[0] = 1;
    instance_destroy();
    part_emitter_clear(global.portalParticleSystem, emitter);
    scrStopMusic();
    scrPlaySound(sndMonster1, 1.2);
    scrStartSlowdown(50, 25);
    scrShakeEffect(10, 0.2);
    for (var i = 1; i &lt; 9; i++)
    {
        piece = instance_create(x, y, objJustinationPiece);
        piece.direction = 360 - 90 * i + random_range(-35, 35);
        if ((i mod 2) == 1 and i &lt; 5)
           piece.image_index = 7;
        else
           piece.image_index = 6;
        piece.speed = random_range(2, 6);
        if (i == 1)
           piece.image_yscale = -1;
        else if (i == 4)
           piece.image_xscale = -1;
        else if (i &gt; 4)
             piece.image_angle = random(360);
    }
    with (objBoss4_Spike)
         vspeed = 1;
}
else if (HP &lt;= 50 and surprise)
{
    surprise = false;
    scrPlaySound(sndBlockChange);
    for (var i = 0; i &lt; 2; i++)
    {
        with (spikes[i])
        {
            hspeed *= choose(1, -1) * 1.2;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checking part's HP
var dead = 0;
for (var i = 0; i &lt; 4; i++)
{
     var p = ds_list_find_value(parts, i);
     if (p.HP &lt;= 0)
        dead++;
}
if (dead &gt; 0)
{
    if (global.musicSlowdown)
    {
        alarm[2] = 5;
        pitch = (256 - dead * 8) / 256;
    }
    part_alpha = dead / 12;
    part_type_alpha2(fantom, part_alpha, 0);
    part_emitter_stream(global.portalParticleSystem, emitter, fantom, -4 +  dead);
}
if (dead &gt;= 4)
{
    alarm[4] = 20;
    active = true;
    global.swapControls = true;
    scrSwapControls();
    alarm[3] = -1;
    repeat (4)
        ds_list_add(parts, instance_create(x + random_range(-128, 128), y + random_range(-128, 128), objJustinationPiece));
    for (var i = 0; i &lt; 8; i++)
    {
        piece = ds_list_find_value(parts, i);
        with (piece)
        {
            speed = random_range(2, 6);
            direction = random(360);
            gravity = random_range(0.2, 0.4);
            alarm[11] = 5;
            sprite_index = sprJustinationPiece;
            active = false;
        }
        if (i &lt; 4)
            piece.image_index = i;
        else
            piece.image_index = irandom_range(4, 5);
    }
    ds_list_clear(active_parts);
    ds_list_clear(parts);
    var r = choose(0, 1);
    for (var i = 0; i &lt; 2; i++)
    {
        var s = spikes[i];
        with (s)
        {
            owner = objJustination;
            kill = false;
            image_alpha = 0.4;
        }
        if (i == r)
        {
            s.doHeal = true;
            s.image_index = 5;
        }
        else
            s.image_index = 3;
    }
    with (objBoss4_Effects)
    {
        part_type_destroy(snow);
        part_type_destroy(smoke);
        part_emitter_destroy(global.portalParticleSystem, emitter[0]);
        part_emitter_destroy(global.saveParticleSystem, emitter[1]);
        surface_free(surf[0]);
        surface_free(surf[1]);
        view_visible[1] = false;
        view_visible[2] = false;
        final = true;
    }
    part_type_sprite(fantom, crazy[global.spriteStyle], false, false, false);
    part_type_life(fantom, 10, 20);
    part_emitter_stream(global.portalParticleSystem, emitter, fantom, 1);
    sprite_index = crazy[global.spriteStyle];
    image_alpha = 0.4;
    for (var i = 0; i &lt; block_count; i++)
    {
        with (blocks[i])
            image_index = 0;
    }
    if (instance_exists(objPlayer) and global.difficulty &lt; 3)
    {
        with (objCherry)
        {
            direction = point_direction(x, y, objPlayer.x, objPlayer.y) + 180;
        }
        with (objBoss4_FruitBomb)
        {
            alarm[0] = -1;
            direction += 180;
        }
    }
    event_user(15);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restoring array of available parts
ds_list_clear(parts);
ds_list_add(parts, objJustinationDark);
ds_list_add(parts, objJustinationIce);
ds_list_add(parts, objJustinationLight);
ds_list_add(parts, objJustinationFire);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (active)
{
    part_emitter_region(global.portalParticleSystem, emitter, x - siz + random_range(-4, 0), x + siz + random_range(0, 4), oldY - siz, oldY + siz, pt_shape_circle, ps_distr_gaussian);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
