<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJustinationDark</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>objJustinationParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
colorHP = c_gray;
spin = 0;
edge = 0;
rotate = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack
if (!instance_exists(objPlayer) or !active)
    return -1;
if (HP &gt; 50)
{
    for (var i = 0; i &lt; 1 + global.difficulty; i++)
    {
        var f = instance_create(objJustination.x, objJustination.y, objCherry);
        f.sprite_index = sprCherryDark;
        f.direction = (360 / (1 + global.difficulty)) * i + spin;
        f.speed = 3 + global.difficulty * 2;
    }
    spin += 16 - global.difficulty * 3;
    if (spin &gt; 360)
        spin -= 360;
    if (edge &gt; 10 - global.difficulty * 2)
    {
        edge = 0;
        with (instance_create(0, 0, objCherry))
        {
            sprite_index = sprCherryDark;
            direction = point_direction(0, 0, objPlayer.x, objPlayer.y);
            speed = 3 + global.difficulty * 2;
        }
        with (instance_create(800, 0, objCherry))
        {
            sprite_index = sprCherryDark;
            direction = point_direction(800, 0, objPlayer.x, objPlayer.y);
            speed = 3 + global.difficulty * 2;
        }
    }
}
else
{
    for (var i = 0; i &lt; min(1 + global.difficulty, 3); i++)
    {
        var f = instance_create(random_range(32, 768), 0, objCherry);
        with (f)
        {
            sprite_index = sprCherryDark;
            hspeed = random_range(-1, 1) * (1 + global.difficulty);
            vspeed = random_range(2, 4) + global.difficulty;
        }
        if (HP &lt;= 0)
            f.sprite_index = sprCherryGray;
    }
    if edge &gt; 6 - global.difficulty
    {
        edge = 0;
        var f = instance_create(objPlayer.x, -64, objBoss4_FruitBomb);
        if (HP &lt;= 0)
            f.sprite_index = sprCherryGray;
    }
}
alarm[0] = 24 - global.difficulty * 7;
edge++;
if (!active)
    alarm[0] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active and rotate &lt; 8)
   rotate += 0.1;
else if (!active and rotate &gt; 0)
     rotate -= 0.1
if (rotate &gt; 0)
{
    image_angle -= rotate;
    if (image_angle &lt;= 0)
        image_angle += 360;
}
if (y &gt; 800)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBoss4_BigBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.target != objJustinationDark or !active)
{
    return -1;
}
if (godmode)
{
    with (other)
        instance_destroy();
}
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active)
{
    if (HP &gt; 0)
    {
        draw_self();
        draw_healthbar(x - 32, oldY - 90, x + 32, oldY - 86, HP, c_black, colorHP, colorHP, 0, true, true);
    }
    else
        draw_sprite_ext(sprJustinationDark, 0, x, y, 1, 1, image_angle, c_black, 1);
}
else
    draw_sprite_ext(sprJustinationDark, 0, x, y, 1, 1, image_angle, c_black, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
