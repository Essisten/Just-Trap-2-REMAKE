<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJustist_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>objBoss1</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
destinationX = 550;
spd = 4;
sprite[0] = sprJustist_Idle;
sprite[1] = sprJustist_Run;
sprite[2] = sprJustist_Jump;
sprite[3] = sprJustist_Fall;
if (global.spriteStyle == 0)
{
    scrAddBodyPart(objBoss1Bow, objJustist);
    scrAddBodyPart(objBoss1_Wings, objJustist);
}
scrAddBodyPart(objBoss1_Head, objJustist);
arms = scrAddBodyPart(objBoss1_Arms, objJustist);
with (instance_create(x, y, objBossName))
{
    name = "Justist";
    owner = objJustist;
    yflip = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hidden)
{
    x = hole.x;
    y = hole.y;
}
with (instance_create(x, y, objBloodEmitter))
{
    type = 2;
    H2_Amount = 10;
    H2_Speed = 8;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Healing

if (hidden or energy &lt;= 5 or HP &lt;= 0 or HP &gt;= 100)
{
    alarm[8] = 50;
    return -1;
}
var tmp = irandom_range(5, min(energy, 20));
var targ = objJustist;
if (objJR.HP &lt; HP and objJR.HP &gt; 0)
    targ = objJR;
if (targ.HP &gt; 80)
    tmp = min(energy, 100 - targ.HP);
with (instance_create(x, y, objHealBullet))
{
    num = tmp;
    target = targ;
    speed = targ.spd;
}
energy -= tmp;
alarm[8] = irandom_range(1200, 1600);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Walking
if (x != destinationX or hidden)
{
    event_user(1);
    return -1;
}
destinationX = irandom_range(0, 800);
if (destinationX &lt; 48)
    destinationX = 48;
else if (destinationX &gt; 752)
    destinationX = 752;
if (global.difficulty &lt; 3)
{
    var t = 464
    if (nextFlying)
        t = nextFlyHight;
    with (instance_create(destinationX, t, objWarningJustist))
        image_index = 1;
}
alarm[10] = 40 - global.difficulty * 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fly or walk
if ((flying and oldY != flyHight) or (!flying and oldY &lt; 464) or hidden)
{
    event_user(0);
    exit;
}
nextFlying = choose(true, false);
if (nextFlying)
{
    nextFlyHight = irandom_range(150, 300);
    if (flying != nextFlying and global.difficulty &lt; 3)
        instance_create(destinationX, nextFlyHight, objWarningJustist);
}
else
{
    if (flying != nextFlying and global.difficulty &lt; 3)
        instance_create(destinationX, 464, objWarningJustist)
}
alarm[11] = warnDelay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hidden)
    return -1;
if (HP &lt;= 0 and objJR.HP &gt; 0)
{
    energy++;
    if (alarm[7] &gt; 10)
        alarm[7] -= 10;
}
if (!instance_exists(bullet))
   bullet = instance_nearest(x, y, objBullet);
if (godmode or HP &lt;= 0)
    exit;
else
    HP -= bullet.dmg;
with (bullet)
    instance_destroy();
//godmode = true;
//alarm[2] = 1;
//alarm[3] = 40;
if (!sound_isplaying(hit))
   hit = scrPlaySound(sndBossHit);
if (HP &lt;= 0)
    scrPlaySound(sndDeath);
if ((extraBulletsCounter == 0 and HP &gt; 50 and HP &lt;= 75) or
(extraBulletsCounter &lt;= (1 + global.difficulty * 2) and HP &gt; 25 and HP &lt;= 50) or
(extraBulletsCounter &lt;= (1 + global.difficulty * 2) * 2 and HP &gt; 0 and HP &lt;= 25) or 
(extraBulletsCounter &lt;= (1 + global.difficulty * 2) * 3 and HP &lt;= 0))
{
    event_user(13);
    scrPlaySound(sndBoss1);
    spd += 1 + global.difficulty;
    image_speed += 0.04;
    if (HP &lt;= 0)
    {
        with (objBG)
        {
            alarm[1] = 5;
            pitch = 232/256;
        }
        alarm[7] = irandom_range(2000, 3000);
        reviveSound = true;
        if (objJR.HP &lt;= 0)
        {
            with (objBG)
            {
                event_user(3);
                pitch = 208/256;
                alarm[1] = 5;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack 2
for (var i = 0; i &lt; 5 + global.difficulty * 2; i++)
{
    with (instance_create(x, y, objBulletJustist))
    {
        direction = point_direction(x, y, objPlayer.x, objPlayer.y);
        speed -= i;
    }
}
scrPlaySound(sndShoot, 0.8);
scrPlaySound(sndShoot, 0.8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack 1
for (var i = 0; i &lt; 3 + global.difficulty; i++)
{
    with (instance_create(x, y, objBulletJustist))
    {
        direction = point_direction(x, y, objPlayer.x, objPlayer.y);
        speed -= i * 2;
    }
}
scrPlaySound(sndShoot, 0.8);
scrPlaySound(sndShoot, 0.8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = sprite[state];
if (HP &lt;= 0)
{
    draw_set_blend_mode(bm_add);
    draw_set_alpha((0.7 - HP / 100) * image_alpha);
    draw_ellipse_colour(x - rad * 1.5, y - rad * 1.5, x + rad * 1.5, y + rad * 1.5, c_maroon, c_black, false);
    draw_set_alpha(1);
    draw_set_blend_mode(bm_normal);
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, 0, c_black, image_alpha);
}
else
    draw_self();
if (HP &gt; 0 and !hidden)
{
    draw_set_alpha(1);
    draw_healthbar(x - rad, y - rad, x + rad, y - 68, HP, c_black, c_red, c_red, 0, true, true);
    draw_set_blend_mode(bm_add);
    draw_set_alpha((0.7 - HP / 100) * image_alpha);
    draw_ellipse_colour(x - rad, y - rad, x + rad, y + rad, c_maroon, c_black, false);
    draw_set_alpha(1);
    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
