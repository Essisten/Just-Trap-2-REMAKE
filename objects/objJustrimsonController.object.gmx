<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 200;
alarm[2] = 50;
alarm[3] = 200;
block_type = false;
dead = false;
global.noPause = true;
lmao = (irandom_range(1, 100) == 1);
if (lmao)
   objJustrimsonA.sprite_index = sprLeslie;
for (i = 32; i &lt;= 736; i+=32)
{
    with (instance_create(i, 576, objBlock))
    {
        sprite_index = sprBoss3_Block;
        visible = true;
        image_speed = 0;
        depth = 9;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Show names with delay

with (instance_create(objJustrimsonA.x, objJustrimsonA.y, objBossName))
{
    if (objJustrimsonController.lmao)
       name = "Leslie";
    else
        name = "Grim-kun";
    owner = objJustrimsonA;
}
with (instance_create(objJustrimsonB.x, objJustrimsonB.y, objBossName))
{
    name = "Raphael";
    yflip = true;
    owner = objJustrimsonB;
}
with (instance_create(objJustrimsonC.x, objJustrimsonC.y, objBossName))
{
    name = "Surface-chan";
    xflip = true;
    yflip = true;
    owner = objJustrimsonC;
}
with (instance_create(objJustrimsonD.x, objJustrimsonD.y, objBossName))
{
    name = "Flip";
    xflip = true;
    owner = objJustrimsonD;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawning blocks
var obj = objJustrimson_Block;
if (block_type)
   obj = objJustrimson_Water;
with (instance_create(800, 224, obj))
{
    hspeed *= -1;
    image_index = 1;
}
instance_create(-32, 352, obj);
alarm[2] = 80 - global.difficulty * 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop pulling out the spikes
with (objSpikeUp)
     vspeed = 0;
with (objSpikeDown)
     vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pull out the spikes
with (objSpikeUp)
{
    image_blend = c_red;
    vspeed = -2;
}
with (objSpikeDown)
{
    image_blend = c_blue;
    vspeed = 2;
}
alarm[1] = 32;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The ending
if (!instance_exists(objPlayer))
   exit;
if (global.grav == -1)
   scrFlipGrav();
with (objSpikeUp)
     vspeed = 2;
with (objBlock)
{
    if (y == 576)
       vspeed = 2;
}
with (objJustrimsonParent)
{
    alarm[0] = -1;
    alarm[1] = -1;
    alarm[2] = -1;
    alarm[4] = 1;
    image_alpha = 1;
    direction = point_direction(x, y, objPlayer.x, objPlayer.y) + 180;
    speed = 2;
    circle_width = 0;
}
with (objJustrimson_Soul)
{
    target = objPlayer;
}
with (objJustrimsonB_Halo)
{
    gravity = 0.1;
    gravity_direction = 270;
}
instance_destroy(objJustrimsonC_Heart);
with (objJustrimsonB_Laser)
{
    if (side == 1 or side == 3)
       instance_destroy();
}
with (objJustrimsonA_blade)
     endless = false;
audio_stop_sound(global.currentMusic);
alarm[2] = -1;
dead = true;
scrLoadConfig();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
