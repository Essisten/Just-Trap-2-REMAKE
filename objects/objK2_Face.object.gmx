<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprK2_Face</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-87</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_xscale = 16;
image_yscale = image_xscale;
instance_destroy(objBigGeezer_Head);
instance_destroy(objGeezer_Text);
audio_stop_sound(sndGeezerStatic);
with (objBigGeezer_BG)
     instance_destroy(objBigGeezer_BG);
 with (objSpikeParent)
    sprite_index = sprBigKid_KamiliaSpike;
with (objBlock)
{
     sprite_index = sprBigKamilia_Block;
     visible = true;
}
counter = 0;
with (objBigKid_BG)
{
   with (top_wall)
        image_index = 1;
   with (left_wall)
        image_index = 2;
   with (right_wall)
        image_index = 2;
   with (bottom_wall)
   {
       sprite_index = sprBigKamilia_Platform;
       image_xscale = ceil((view_xview[0] + view_wview[0] - x) /
       sprite_get_width(sprite_index)) - 1;
   }
}
with (objBigBow)
     image_index = 3;
instance_create(objBigKid_BG.x, objBigKid_BG.y, objBigJust_ViewMover);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Explode
var boom = instance_create(x + random_range(-128, 128), y + random_range(-64, 128), objK2_Laser);
with (boom)
{
    sprite_index = sprK2_DeathBoom;
}
counter++;
scrPlaySound(sndK2_Boom);
alarm[3] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start death scene
with (objSpikeParent)
     instance_destroy();
with (objBlock)
     image_blend = c_black;
with (objBigKid_Head)
     image_blend = c_black;
with (objBigBow)
     image_blend = c_black;
with (objBow)
     image_blend = c_black;
with (objPlayer)
     color_normal = c_black;
with (objWeaponPlayer)
     image_blend = c_black;
with (objBigKid_Body)
{
     image_blend = c_black;
     alarm[0] = -1;
}
with (objBigKid_BounceFruit)
     instance_destroy();
with (objBigKid_Bullet)
     instance_destroy();
with (objBigKid_Water)
     instance_destroy();
with (objK2_Bomb)
     instance_destroy();
instance_destroy(objK2_PeriodicAttack);
image_blend = c_black;
with (objBigKid_BG)
     image_alpha = 0;
background_colour = c_white;
alarm[3] = 1;
audio_stop_sound(global.currentMusic);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn spheres
with (objBigKid_Head)
{
    instance_create(x, y, objK2_SphereCenter);
}
instance_create(view_xview[0] + view_wview[0] / 2, view_yview[0] - view_hview[0], objMoon);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(objBigKid_Head))
   exit;
y = objBigKid_Head.y;
image_alpha = objBigKid_Head.image_alpha;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (counter &gt; 50)
{
    draw_set_font(fBoss1_46);
    draw_set_halign(fa_center);
    scrDrawTextOutline(view_xview[0] + view_wview[0] / 2, 128, "To Be Continued", c_black, c_black);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
