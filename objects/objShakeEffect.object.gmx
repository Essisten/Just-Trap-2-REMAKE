<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>leaveRoom = true;  //sets whether the camera can follow the player outside of the room's boundaries
shake_mag = 0;
shake_mag_acc = 0;
surface = surface_create(view_wview[0], view_hview[0]);
old_x = view_xview[0];
old_y = view_yview[0];
if (instance_exists(objPlayer))
{
    xFollow = max(objPlayer.x, old_x);
    yFollow = max(objPlayer.y, old_y);
}
xFollow = clamp(xFollow, old_x, old_x + room_width-1); 
yFollow = clamp(yFollow, old_y, old_y + room_height-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(surface)
   surface_free(surface);
application_surface_draw_enable(true);
view_xview[0] = old_x;
view_yview[0] = old_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destruction

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shake_mag &gt; 0)
{
    shake_mag -= shake_mag_acc;
    if (shake_mag &lt; 0)
        shake_mag = 0;
    view_xview[0] = old_x + floor(xFollow/view_wview[0])*view_wview[0] + random_range(-shake_mag,shake_mag);
    view_yview[0] = old_y + floor(yFollow/view_hview[0])*view_hview[0] + random_range(-shake_mag,shake_mag);
}
else
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Thanks to Just and Kelvar &lt;3
surface_free(surface);
surface = surface_create(view_wview[0], view_hview[0]);
surface_set_target(surface);
var v_w = view_wview[0];
var v_h = view_hview[0];
draw_clear_alpha(c_black, 0);
surface_copy(surface, view_xview[0] - old_x, view_yview[0] - old_y, application_surface);
surface_reset_target();
//draw_clear_alpha(c_black, 0);
for (i = 0; i &lt; 5; i++)
{    
    draw_surface_ext(surface, round(view_xview[0]/v_w)*v_w + (view_xview[0]-round(view_xview[0]/v_w)*v_w),
    round(view_yview[0]/v_h)*v_h + (view_yview[0]-round(view_yview[0]/v_h)*v_h),
    1, 1, 0, c_white, (5 - i)/6);
    
   draw_surface_ext(surface, view_xview[0] + (view_xview[0]-round(view_xview[0]/v_w)*v_w) - old_x,
   view_yview[0] + (view_yview[0]-round(view_yview[0]/v_h)*v_h) - old_y,
   1, 1, 0, c_white, (5 - i)/6);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
