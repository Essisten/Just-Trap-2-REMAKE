<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprViridian</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100010</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>objViridian</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = choose(128, 255)
image_blend = make_colour_hsv(type, type, 200);
image_xscale = 6;
image_yscale = image_xscale;
rotate = false;
fly = true;
line = false;
muted = false;
shootCounter = 0;
totalShoots = 0;
lineCounter = 0;
d = 0;
spd = 16 * choose(1, -1);
yy = y;
alarm[2] = 160;
seed = irandom(2)
alarm[4] = 80;
instance_create(0, 0, objLightEffect);
alarm[6] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///throw stars
for (var i = 0; i &lt; global.difficulty + 1; i++)
{
    var s = instance_create(x, y, objStarV);
    with (s)
    {
        speed = (global.difficulty + 2) * 2;
        image_xscale = 0.5;
        image_yscale = image_xscale;
    }
    s.direction = random(360);
}
alarm[7] = 11 - global.difficulty * 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>objViridian</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///first meme
if (muted)
    exit;
scrPlaySound(sndAppearV);
switch (seed)
{
    case 0:
        scrPlaySound(sndVoiceV1);
        break;
    case 1:
        scrPlaySound(sndVoiceV3);
        break;
    case 2:
        scrPlaySound(sndLaughV2);
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop spinning
rotate = false;
fly = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///meme
if (muted)
    exit;
switch (seed)
{
    case 1:
        scrPlaySound(sndVoiceV4);
        break;
    default:
        scrPlaySound(sndVoiceV2);
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play sound for final aim
scrPlaySound(sndWarningV);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remember player position
if (!instance_exists(objPlayer))
    exit;
shootCounter = 0;
alarm[7] = 2;
line = true;
fly = false;
rotate = true;
direction = point_direction(x, y, objPlayer.x, objPlayer.y);
if (totalShoots &lt; 4)
{
    alarm[1] = 65 - totalShoots * 15;
    scrPlaySound(sndWarningV);
}
else
{
    if (lineCounter &gt; 200)
    {
        direction = point_direction(x, y, objJustularity.x, objJustularity.y);
        alarm[1] = 20;
    }
    else
    {
        lineCounter++;
        alarm[2] = 1;
        direction += choose(-1, 1) * random_range(0, 4);
        if (alarm[3] == -1)
            alarm[3] = 11 - (lineCounter div 20);
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>objViridian</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Real time shooting
shootCounter++;
line = false;
var s = instance_create(x, y, objStarV);
s.direction = direction;
s.image_xscale = 2 + totalShoots;
s.image_yscale = s.image_xscale;
scrPlaySound(sndShootV);
if (shootCounter &lt; 30)
    alarm[1] = 1 + totalShoots;
else
{
    totalShoots++;
    spd += 2 * sign(spd);
    if (totalShoots &lt; 5)
        alarm[2] = 50;
    else
    {
        alarm[0] = 150;
        alarm[5] = irandom_range(1, 20);
        alarm[7] = -1;
        with (objJustularity)
            event_user(4);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Die
instance_destroy();
instance_create(0, 0, objLightEffect);
objBoss2Door.alarm[2] = 150;
if (muted)
    exit;
scrPlaySound(sndWarpV);
scrPlaySound(choose(sndLaughV1, sndLaughV2));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fly)
{
    y = yy + sin(degtorad(d)) * 32;
}
else
    yy = y;
d += 2;
if (rotate)
{
    image_angle += spd;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (line)
{
    draw_set_alpha(0.2);
    draw_line_width_colour(x, y, x + lengthdir_x(1000, direction), y + lengthdir_y(1000, direction), 8, c_white, c_white);
    draw_set_alpha(1);
}
draw_set_blend_mode(bm_add);
var rad = 96 + sin(degtorad(d)) * 16;
draw_ellipse_colour(x - rad, y - rad, x + rad, y + rad, c_black, image_blend, false);
draw_set_blend_mode(bm_normal);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
